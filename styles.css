/* Glassmorphism Enhanced Styles */

/* Import the glassmorphism variables from main file */
:root {
  /* Inherit glassmorphism variables from index.html */
  --glass-white: rgba(255, 255, 255, 0.25);
  --glass-surface: rgba(255, 255, 255, 0.4);
  --glass-hover: rgba(255, 255, 255, 0.5);
  --glass-border: rgba(255, 255, 255, 0.45);
  --glass-shadow: rgba(31, 38, 135, 0.15);
  --blur-amount: 20px;
  --transition-speed: 0.3s;
  --transition-function: cubic-bezier(0.4, 0, 0.2, 1);
  
  /* Status colors with glass effect */
  --success-glass: rgba(16, 185, 129, 0.2);
  --warning-glass: rgba(245, 158, 11, 0.2);
  --danger-glass: rgba(239, 68, 68, 0.2);
}

#status-dot {
  width: 12px;
  height: 12px;
  border-radius: 50%;
  display: inline-block;
  background: rgba(255, 255, 255, 0.6);
  margin-right: 8px;
  position: relative;
  top: -1px;
  transition: all var(--transition-speed) var(--transition-function);
  box-shadow: 0 0 10px rgba(255, 255, 255, 0.3);
}

#status-dot.listening {
  background: var(--warning-glass);
  box-shadow: 0 0 20px rgba(245, 158, 11, 0.5);
  animation: pulse 1.5s infinite;
}

#status-dot.processing {
  background: var(--glass-surface);
  box-shadow: 0 0 20px rgba(99, 102, 241, 0.5);
  animation: rotate 1s linear infinite;
}

#status-dot.error {
  background: var(--danger-glass);
  box-shadow: 0 0 20px rgba(239, 68, 68, 0.5);
}

@keyframes pulse {
  0%, 100% { transform: scale(1); opacity: 1; }
  50% { transform: scale(1.2); opacity: 0.8; }
}

@keyframes rotate {
  from { transform: rotate(0deg); }
  to { transform: rotate(360deg); }
}

body {
  font-family: Arial, sans-serif;
  max-width: 600px;
  margin: 20px auto;
  line-height: 1.5;
  color: var(--text-color);
  padding: 0 15px;
}

h2 {
  color: var(--primary-color);
  margin-bottom: 20px;
}

button {
  padding: 10px 16px;
  background: var(--primary-color);
  color: white;
  border: none;
  border-radius: 4px;
  cursor: pointer;
  font-weight: bold;
  transition: background-color 0.2s;
}

button:hover {
  background: var(--primary-hover);
}

button:active {
  transform: scale(0.98);
}

button.active {
  background-color: var(--danger-color);
}

pre {
  background: var(--glass-surface);
  backdrop-filter: blur(var(--blur-amount));
  -webkit-backdrop-filter: blur(var(--blur-amount));
  padding: 1.25rem;
  border-radius: 12px;
  white-space: pre-wrap;
  margin-top: 1rem;
  border: 1px solid var(--glass-border);
  box-shadow: 
    0 8px 32px var(--glass-shadow),
    inset 0 1px 0 rgba(255, 255, 255, 0.1);
  transition: all var(--transition-speed) var(--transition-function);
}

#lastObjection {
  border-left: 4px solid var(--warning-color);
}

#reply {
  border-left: 4px solid var(--success-color);
  font-weight: bold;
}

/* Glass fade-in animation */
@keyframes glassFadeIn {
  from {
    opacity: 0;
    transform: translateY(10px);
    filter: blur(5px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
    filter: blur(0);
  }
}

#reply:not(:empty) {
  animation: glassFadeIn 0.5s var(--transition-function);
}

/* Glass visualizer bars */
.visualizer-bar {
  width: 4px;
  display: inline-block;
  margin: 0 2px;
  height: 5px;
  background: linear-gradient(to top,
    rgba(99, 102, 241, 0.8),
    rgba(99, 102, 241, 0.2));
  border-radius: 2px;
  transition: height 0.1s var(--transition-function);
  box-shadow: 0 0 10px rgba(99, 102, 241, 0.3);
}

.dark-mode .visualizer-bar {
  background: linear-gradient(to top,
    rgba(129, 140, 248, 1),
    rgba(129, 140, 248, 0.3));
  box-shadow: 0 0 15px rgba(129, 140, 248, 0.5);
}

/* Responsive adjustments */
@media (max-width: 480px) {
  h2 {
    font-size: 1.4rem;
  }
  
  button {
    width: 100%;
  }
}